@model FeeAutomationLibrary.FeeTypeMapping

@{
    ViewBag.Title = "Add or Edit";
    List<SelectListItem> scopeList = new List<SelectListItem>();
    
    scopeList.Add(new SelectListItem() { Text = "Choose Fee Scope", Value = "", Selected = true });
    foreach (string feeScope in Model.ScopeList)
    {
        string[] feeScopeItemArray = feeScope.Split('|');
        scopeList.Add(new SelectListItem() { Text = feeScopeItemArray[1], Value = feeScopeItemArray[0], Selected = false });
    }
    
    List<SelectListItem> queryList = new List<SelectListItem>();
    queryList.Add(new SelectListItem() { Text = "Choose Query", Value = "", Selected = true });
    foreach (string query in Model.QueryList)
    {
        string[] queryArray = query.Split('|');
        queryList.Add(new SelectListItem() { Text = queryArray[1], Value = queryArray[0], Selected = false });
    }
    List<FeesAutomationWebsite.Models.FeeType> feeTypes = FeesAutomationWebsite.DataStores.FeeTypeStore.GetFeeTypeList(true);

    List<SelectListItem> bookingTypeList = ViewBag.BookingTypeList;
}

<h2>Add New or Edit</h2>

@using (Html.BeginForm("Save", "FeeTypeMapping", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OutletCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OutletCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OutletCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FeeType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FeeType, new SelectList(feeTypes, "Code", "Description"), htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FeeType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BookingType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BookingType, new SelectList(bookingTypeList, "Value", "Text"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BookingType, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.QueryType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.QueryType, new SelectList(queryList, "Value", "Text"), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QueryType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="divScope" class="form-group">
        @Html.Label("Add Scope", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-9">
            @Html.DropDownList("ddlSelScope", new SelectList(scopeList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="editor-label">@Html.LabelFor(m => m.Scope, htmlAttributes: new { @class = "control-label col-md-2" })</div>
        <div class="col-md-9">
            @Html.HiddenFor(m => m.Scope, new { Value = Model.FeeType == null ? string.Empty : string.Join(",", Model.Scope) })
            <input type="text" id="ScopeCodes" hidden />
            <div id="selectedScopeCodes"></div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AutoApply, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.AutoApply, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AutoApply, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ExclusionCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ExclusionCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExclusionCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-9">
            <span class="text-danger">
                @Html.DisplayFor(model => model.ErrorDescription)
            </span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/feetypemappingmanage")
}
